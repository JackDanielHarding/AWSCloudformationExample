AWSTemplateFormatVersion: 2010-09-09

Description: Jack Harding - Network resources required for IaC project

Parameters:
    EnvironmentID:
        Description: ID for the environment created by these scripts
        Type: String

    VPCCIDR:
        Description: CIDR value for the VPC
        Type: String
        Default: 10.0.0.0/16 

    PublicSubnet1CIDR:
        Description: CIDR value for Public subnet 1
        Type: String
        Default: 10.0.1.0/24 

    PublicSubnet2CIDR:
        Description: CIDR value for Public subnet 2
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet1CIDR:
        Description: CIDR value for Private subnet 1
        Type: String
        Default: 10.0.3.0/24 
    
    PrivateSubnet2CIDR:
        Description: CIDR value for Private Subnet 2
        Type: String
        Default: 10.0.4.0/24 

Resources:
    VPC:
        Type: 'AWS::EC2::VPC'
        Properties:
            CidrBlock: !Ref VPCCIDR
            EnableDnsHostnames: true

    InternetGateway:
        Type: AWS::EC2::InternetGateway

    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            VpcId: !Ref VPC

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [1, !GetAZs '']
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            VpcId: !Ref VPC

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            VpcId: !Ref VPC

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone: !Select [1, !GetAZs '']
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            VpcId: !Ref VPC

    NATGateway1ElasticIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NATGateway2ElasticIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NATGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NATGateway1ElasticIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NATGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NATGateway2ElasticIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    DefaultPublicRoute:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway
            RouteTableId: !Ref PublicRouteTable

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NATGateway1
            RouteTableId: !Ref PrivateRouteTable1

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NATGateway2
            RouteTableId: !Ref PrivateRouteTable2

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties: 
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPCRef:
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentID}-VPCID
    
    VPCCIDRRef:
        Description: A reference to the created VPC's CIDR block
        Value: !GetAtt VPC.CidrBlock
        Export:
            Name: !Sub ${EnvironmentID}-VPCCIDRID
    
    PublicSubnet1Ref:
        Description: A List of references to the created public subnets
        Value: !Ref PublicSubnet1
        Export:
            Name: !Sub ${EnvironmentID}-publicSubnet1ID

    PublicSubnet2Ref:
        Description: A List of references to the created public subnets
        Value: !Ref PublicSubnet2
        Export:
            Name: !Sub ${EnvironmentID}-publicSubnet2ID
    
    PrivateSubnetsRef:
        Description: A List of references to the created private subnets
        Value: !Join [",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2]]
        Export:
            Name: !Sub ${EnvironmentID}-privateSubnetIDs